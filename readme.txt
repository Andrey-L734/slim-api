##############################
Инструкция по запуску:

Проект собран для запуска с помощью Docker

1) Открыть в терминале скачанный проект
2) Перейти в папку "src" и выполнить команду "composer install"
3) Вернуться в корневую папку проекта и выполнить команду "docker-compose up -d"
4) Подключиться к phpmyadmin (по умолчанию: сервер mysql, пользователь root, пароль mysql)
5) Создать базу данных с названием "slim_api"
6) Создать таблицу со следующей структурой:

    CREATE TABLE `loans` (
      `id` int UNSIGNED NOT NULL AUTO_INCREMENT,
      `clientId` int UNSIGNED NOT NULL,
      `sum` int NOT NULL,
      `receiptDate` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
      `returnDate` timestamp NOT NULL,
      `rate` int NOT NULL,
      PRIMARY KEY (`id`)
    ) ENGINE=InnoDB

7) Готово!


##############################
Инструкция по использованию

Api поддерживает 5 запросов:
- Получение информации об одном займе по id
GET     {{host}}/loans/{{id}}

- Получение списка всех займов
GET     {{host}}/loans

- Добавление нового займа
POST    {{host-d}}/loans

- Изменение существующего займа
PUT     {{host-d}}/loans/{{id}}

- Удаление займа
DELETE  {{host-d}}/loans/{{id}}

##############################
Требуемая структура отправляемых данных для добавления или обновления займа в формате JSON:

{
    "clientId": 10,
    "sum": 10,
    "returnDate": "01-01-2024",
    "rate": 10.9
}


clientId - id текущего клиента, целое число
sum - сумма займа, целое число
returnDate - дата возврата займа, строка, формат = день-месяц-год
rate - процентная ставка, число с плавающей запятой

##############################
Структура возвращаемых данных для запросов просмотра одного займа, добавления и обновления в формате JSON:

{
    "id": 2,
    "clientId": 10,
    "sum": 600,
    "receiptDate": "2024-04-16 00:00:00",
    "returnDate": "2024-11-22 00:00:00",
    "rate": 15
}

##############################
Для списка займов структура состоит из массива с объектами займов, показанных выше

[
    {
        "id"...
    },
    {
        "id"...
    },
]

##############################
В качестве тестов в папке postman лежит коллекция запросов с тестовыми данными и примерами ответов в разных ситуациях